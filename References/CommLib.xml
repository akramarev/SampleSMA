<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommLib</name>
    </assembly>
    <members>
        <member name="T:OEC.Severity">
            <summary>
            Log message severity
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Log">
            <summary>
            Thread-safe logger
            <exclude/>
            </summary>
            <remarks>
            Creates a separate file for each day.
            </remarks>
        </member>
        <member name="M:OEC.Log.Initialize(OEC.ILogImpl)">
            <summary>
            Logger can be changed to own implementation
            </summary>
            <param name="logImpl"></param>
        </member>
        <member name="T:OEC.ILogImpl">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Log.InternalLogImpl.LogItem">
            <summary>
            Log record.
            </summary>
        </member>
        <member name="T:OEC.ExactTime">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.SafeQue`1">
            <summary>
            Thread-safe queue
            <exclude/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.SafeList`1">
            <summary>
            Thread-safe list
            <exclude/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OEC.SafeList`1.Clear">
            <summary>
            Clears the list.
            </summary>
            <returns>Old contents of list</returns>
        </member>
        <member name="T:OEC.SafeDictionary`3">
            <summary>
            Thread-safe wrapper for any dictionary with rwl locks.
            <exclude/>
            </summary>
            <typeparam name="TKey">Key type</typeparam>
            <typeparam name="TValue">Value type</typeparam>
            <typeparam name="Container">Containter type : IDictionary</typeparam>
        </member>
        <member name="M:OEC.SafeDictionary`3.Extract(`0,`1)">
            <summary>
            Extracts a value from list, or returns a provided value if key does not present
            </summary>
            <param name="key">Key</param>
            <param name="notfound">Default value</param>
            <returns>Value</returns>
        </member>
        <member name="M:OEC.SafeDictionary`3.ReplaceIf(`0,System.Predicate{`1},`1,System.Boolean)">
            <summary>
            Compare and Replace
            </summary>
            <param name="key">Key</param>
            <param name="pred">Predicate</param>
            <param name="newvalue">New value</param>
            <param name="notfound">Add value if key is not found</param>
            <returns></returns>
        </member>
        <member name="M:OEC.SafeDictionary`3.ClearValues">
            <summary>
            Thread-safe - returns a copy of list and clears list
            </summary>
        </member>
        <member name="M:OEC.SafeDictionary`3.ClearDictionary">
            <summary>
            Thread-safe - returns a copy of list and clears list
            </summary>
        </member>
        <member name="P:OEC.SafeDictionary`3.List">
            <summary>
            must use ReaderLock
            </summary>
        </member>
        <member name="P:OEC.SafeDictionary`3.CopyValues">
            <summary>
            Thread-safe - returns a copy of list
            </summary>
        </member>
        <member name="P:OEC.SafeDictionary`3.Keys">
            <summary>
            Thread-safe - returns a copy of list
            </summary>
        </member>
        <member name="T:OEC.SafeDictionary`2">
            <summary>
            Thread-Safe Dictionary
            <exclude/>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:OEC.SafeSortedList`2">
            <summary>
            Thread-safe sorted list
            <exclude/>
            </summary>
            <seealso cref="!:SafeDictionary"/>
            <typeparam name="TKey">Key type</typeparam>
            <typeparam name="TValue">Value type</typeparam>
        </member>
        <member name="M:OEC.SafeSortedList`2.Pred(`0)">
            <summary>
            Predecessor 
            </summary>
            <param name="key"></param>
            <returns>Value or default</returns>
        </member>
        <member name="P:OEC.SafeSortedList`2.Last">
            <summary>
            Last value in the list (by key order)
            </summary>
        </member>
        <member name="T:OEC.SafeDefaultDictionary`2">
            <summary>
            Thread-safe dictionary with default value for not-found keys
            <exclude/>
            </summary>
            <remarks>
            Does not throw an exception if key is not found.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.CreatingSafeDictionary`2">
            <summary>
            Thread-safe version of CreatingDictionary
            <exclude/>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:OEC.DefaultCreatingSortedList`2">
            <summary>
            SortedList creating a new value for not-found keys
            <exclude/>
            </summary>
            <remarks>
            Does not throw an exception if key is not found.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.CreatingSortedList`2">
            <summary>
            SortedList creating a new value for not-found keys using given creator
            <exclude/>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.CreatingDictionary`2">
            <summary>
            Dictionary creating a new value for not-found keys using given creator
            <exclude/>
            </summary>
            <remarks>
            Does not throw an exception if key is not found.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OEC.CreatingDictionary`2.#ctor">
            <summary>
            must ininitialize creator later
            </summary>
        </member>
        <member name="T:OEC.DummyDictionary`2">
            <summary>
            Dictionary creating a new value for not-found keys using given creator
            <exclude/>
            </summary>
            <remarks>
            Does not throw an exception if key is not found.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.CreatingSafeSortedList`2">
            <summary>
            Thread-safe version of CreatingSortedList
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.DefaultCreatingDictionary`2">
            <summary>
            Dictionary creating a new value for not-found keys
            <exclude/>
            </summary>
            <remarks>
            Does not throw an exception if key is not found.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.NullDictionary`2">
            <summary>
            Dictionary returning null (or default value) for not found keys
            <exclude/>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.NullSortedList`2">
            <summary>
            SortedList returning null (or default value) for not found keys
            <exclude/>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:OEC.OrderedList`1">
            <summary>
            List maintaining given order.
            <exclude/>
            </summary>
            <remarks>
            Override Compare to provide custom order
            </remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OEC.OrderedList`1.Add(`0)">
            <summary>
            Inserts an item to a position by order
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:OEC.RangeMap`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.SafeSet`2">
            <summary>
            <exclude/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="Container"></typeparam>
        </member>
        <member name="T:OEC.SafeSet`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.BidirectionalMap`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.AllocationBlockItemDesc">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.AllocationBlockDesc">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserAllocationBlockList">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.SyncQueue`1">
            <summary>
            Thread-safe waitable queue
            <exclude/>
            </summary>
            
        </member>
        <member name="M:OEC.SyncQueue`1.#ctor">
            <summary>
            Intializes a new queue object
            </summary>
        </member>
        <member name="M:OEC.SyncQueue`1.Enqueue(`0)">
            <summary>
            Writes object in the queue
            </summary>
            <param name="item">object to write</param>
        </member>
        <member name="M:OEC.SyncQueue`1.Dequeue(System.Int32)">
            <summary>
            waits for data available and extract first item
            </summary>
            <param name="TimeoutMs"></param>
            <returns>null if no data in the queue and timeout expired</returns>
        </member>
        <member name="M:OEC.SyncQueue`1.DequeueNoWait">
            <summary>
            extracts first available item returns immediatelly. 
            </summary>
            <returns>null if no data in the queue</returns>
        </member>
        <member name="P:OEC.SyncQueue`1.Count">
            <summary>
            number of items in the queue
            </summary>
        </member>
        <member name="T:OEC.Protocol.MessageRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Order">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IDChildEntity">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChildEntity`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IDEntity">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IParentKey`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderChild">
            <summary>
            base class for order items, such as state, command, version and fill
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Fill">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.FillType">
            <summary>
            Fill type
            <exclude/>
            </summary>
            <remarks>
            Describes how to use fill in calculations
            </remarks>
        </member>
        <member name="F:OEC.Data.FillType.General">
            <summary>
            Fill of ordinary order
            </summary>
        </member>
        <member name="F:OEC.Data.FillType.SameSide">
            <summary>
            Fill of positive leg of compound order
            </summary>
        </member>
        <member name="F:OEC.Data.FillType.Opposite">
            <summary>
            Fill of negative leg of compound order
            </summary>
        </member>
        <member name="F:OEC.Data.FillType.SpreadMain">
            <summary>
            Fill of positive leg of spread
            </summary>
        </member>
        <member name="F:OEC.Data.FillType.SpreadPair">
            <summary>
            Fill of negative leg of spread
            </summary>
        </member>
        <member name="T:OEC.Data.State">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExtOrderState">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderVersion">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderCommand">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderSide">
            <summary>
            Side of an order
            </summary>
        </member>
        <member name="F:OEC.Data.OrderSide.None">
            <summary>
            No side
            </summary>
        </member>
        <member name="F:OEC.Data.OrderSide.Buy">
            <summary>
            order to buy 
            </summary>
        </member>
        <member name="F:OEC.Data.OrderSide.Sell">
            <summary>
            order to sell 
            </summary>
        </member>
        <member name="F:OEC.Data.OrderSide.BuyToCover">
            <summary>
            buy to cover
            </summary>
        </member>
        <member name="F:OEC.Data.OrderSide.SellShort">
            <summary>
            short sell
            </summary>
        </member>
        <member name="T:OEC.Data.OrderType">
            <summary>
            Type of order
            </summary>
            <remarks>
            MarketOnPitOpen = MarketOnOpen, but uses pit session opening time<br/>
            StopLimit order requires two prices.<br/>
            Some contracts/exchanges do not support some of order types.
            </remarks>
        </member>
        <member name="F:OEC.Data.OrderType.Market">
            <summary>
            Market order - filled by current bid/offer
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.Limit">
            <summary>
            Limit order - filled by limit price or better
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.Stop">
            <summary>
            Stop order (Stop loss order) - when trade price reaches the stop price, filled as market order
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.StopLimit">
            <summary>
            Stop limit order - when trade price reaches the stop price, filled as limit order
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketIfTouched">
            <summary>
            Market if touched when trade price crosses order price, filled as market order
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketToLimit">
            <summary>
            When partially filled, remaining part filled as limit order by partial fill price
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketOnOpen">
            <summary>
            Market order, released on session open
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketOnClose">
            <summary>
            Market open, released before session closes
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketOnPitOpen">
            <summary>
            Market order, released on pit session open (when applicable)
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.MarketOnPitClose">
            <summary>
            Market order, released before pit session closes (when applicable)
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.TrailingStopLoss">
            <summary>
            Stop order, adjusted to market price.
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.TrailingStopLimit">
            <summary>
            Stop/Limit order, adjusted to market price.
            </summary>
        </member>
        <member name="F:OEC.Data.OrderType.Iceberg">
            <summary>
            Iceberg - Limit order showing less qty.
            </summary>
        </member>
        <member name="T:OEC.Data.OrderState">
            <summary>
            State of order. 
            </summary>
            <remarks>
            Basic state diagram for order lifetime.
            <pre>
            Sent -> [Held] -> [Accepted] -> Working -> Completed.<br/>
                \-> Rejected.        \-> Cancelled.
            </pre>
            </remarks>
        </member>
        <member name="F:OEC.Data.OrderState.None">
            <summary>
            Order was not sent
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Sent">
            <summary>
            Order sent to server, awaiting confirmation
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Accepted">
            <summary>
            Order accepted by risk system. Optional.
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Held">
            <summary>
            Order is waiting to be accepted or released
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Working">
            <summary>
            Order is active
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Completed">
            <summary>
            Order is (partially) filled and completed 
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Cancelled">
            <summary>
            Order was cancelled
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Rejected">
            <summary>
            Order was rejected
            </summary>
        </member>
        <member name="F:OEC.Data.OrderState.Unknown">
            <summary>
            Order state unknown - error occured
            </summary>
        </member>
        <member name="T:OEC.Data.CommandType">
            <summary>
            Type of order command
            </summary>
        </member>
        <member name="F:OEC.Data.CommandType.Create">
            <summary>
            Create command - first command of order
            </summary>
        </member>
        <member name="F:OEC.Data.CommandType.Modify">
            <summary>
            Modification request
            </summary>
        </member>
        <member name="F:OEC.Data.CommandType.Cancel">
            <summary>
            Cancellation request
            </summary>
        </member>
        <member name="T:OEC.Data.CommandState">
            <summary>
            Order command state
            </summary>
            <remarks>
            New commands have 'Sent' state, then it is changed to Executed and Failed state.
            </remarks>
        </member>
        <member name="F:OEC.Data.CommandState.Sent">
            <summary>
            Awaiting completion
            </summary>
        </member>
        <member name="F:OEC.Data.CommandState.Executed">
            <summary>
            Command executed successfully
            </summary>
        </member>
        <member name="F:OEC.Data.CommandState.Failed">
            <summary>
            Command failed
            </summary>
        </member>
        <member name="T:OEC.Data.OrderFlags">
            <summary>
            Order execution flags
            </summary>
        </member>
        <member name="F:OEC.Data.OrderFlags.None">
            <summary>
            Normal order
            </summary>
        </member>
        <member name="F:OEC.Data.OrderFlags.GTC">
            <summary>
            Good till cancelled
            </summary>
        </member>
        <member name="F:OEC.Data.OrderFlags.FOK">
            <summary>
            Fill or Kill
            </summary>
        </member>
        <member name="F:OEC.Data.OrderFlags.IOC">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:OEC.Data.OrderFlags.AON">
            <summary>
            All or nothing
            See <see>OEC.Data.ExecInst.AON</see>
            </summary>
        </member>
        <member name="F:OEC.Data.ExecInst.None">
            <summary>
            Normal order
            </summary>
        </member>
        <member name="F:OEC.Data.ExecInst.AON">
            <summary>
            All or nothing
            </summary>
        </member>
        <member name="T:OEC.Data.NamespaceDoc">
            <summary>
            This namespace contains some enumerations and constants for OEC API.<br/>
            See <see cref="!:OECClient"/> class for API overview 
            </summary>
        </member>
        <member name="T:OEC.Data.ContractFee">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.FeeType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.HashTools.Certificate">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.CommLib.ProtoStream">
            <summary>
            Serializes objects using ProtoBuf protocol
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.CommLib.PacketStream">
            <summary>
            Serializes length of packet as int32, then packet contents
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.BaseContract">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.NamedEntityEx">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.INameKey">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.BaseContract.FirstContract">
            <summary>
            to be used by bizRules.getFirstContract only
            </summary>
        </member>
        <member name="T:OEC.Data.Contract">
            <summary>
            Contract 
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.NameChildEntity">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Compound">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.CompoundLeg">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.ContractType.Electronic">
            <summary>
            Contract is traded electronically
            </summary>
        </member>
        <member name="F:OEC.Data.ContractType.Pit">
            <summary>
            Contract is traded manually in the pit
            </summary>
        </member>
        <member name="F:OEC.Data.ContractType.Routed">
            <summary>
            Contract is routed to third-party execution (public)
            </summary>
        </member>
        <member name="F:OEC.Data.ContractType.SideBySide">
            <summary>
            Contract can be traded electronically or in the pit (public)
            </summary>
        </member>
        <member name="F:OEC.Data.ContractKind.ForexForward">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Tenor">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.Margin">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IDEntityEx">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ContractKey">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.SymbolLookupMode">
            <summary>
            Symbol lookup mode
            </summary>
        </member>
        <member name="F:OEC.Data.SymbolLookupMode.AnyInclusion">
            <summary>
            A request "GE" returns all contracts that include GE in symbol or description
            </summary>
        </member>
        <member name="F:OEC.Data.SymbolLookupMode.SymbolStartsWith">
            <summary>
            A request "GE" returns all contracts that start with GE: GE, GEM9, etc
            </summary>
        </member>
        <member name="F:OEC.Data.SymbolLookupMode.DescriptionStartsWith">
            <summary>
            A request "GE" returns all contracts with description that start with GE: GENERAL ELECTRIC, GENESIS
            </summary>
        </member>
        <member name="F:OEC.Data.SymbolLookupMode.AnyStartsWith">
            <summary>
            A request "GE" returns all contracts with description or symbol that start with GE: GENERAL ELECTRIC, GENESIS, GE
            </summary>
        </member>
        <member name="F:OEC.Data.SymbolLookupMode.ExactMatch">
            <summary>
            A request "GE" returns only one contract - GENERAL ELECTRIC
            </summary>
        </member>
        <member name="T:OEC.Data.SymbolLookupCriteriaOptionType">
            <summary>
            Symbol lookup, filter by options type
            </summary>
        </member>
        <member name="T:OEC.Data.SymbolLookupCriteriaLockingType">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.SymbolLookupCriteria">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.SymbolLookupExpression">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.QuoteDetailsProperty">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.QuoteDetails">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.IndexInfo">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.CommLib.PacketSocket">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.CommLib.ProtoSocket">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.LimitType">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.IDRiskLimit">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.AccountRiskLimit">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.ContractRiskLimit">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.RiskLimitsType">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.SpanMargin">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.Serializer">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.CommissionType">
            <summary>
            Contract type for given commission
            </summary>
        </member>
        <member name="F:OEC.Data.CommissionType.Electronic">
            <summary>
            Commission for electronically executed order
            </summary>
        </member>
        <member name="F:OEC.Data.CommissionType.Pit">
            <summary>
            Commission for order in the pit
            </summary>
        </member>
        <member name="T:OEC.Data.CommissionRecord">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserFeeRecord">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.SoftwareFeeRecord">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.SubscribeType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.PriceRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.PriceResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.DealQuoteRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.LowestLowest">
            <summary>
            lowest price- lowest acc (for backward compatibility)
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.LowestHighest">
            <summary>
            lowest price-highest acc (for backward compatibility)
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.LowAcctLowPrice">
            <summary>
            lowest price- lowest acc
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.LowAcctHighPrice">
            <summary>
            lowest price-highest acc
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.HighAcctLowPrice">
            <summary>
            highest price- lowest acc
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.HighAcctHighPrice">
            <summary>
            highest price-highest acc
            </summary>
        </member>
        <member name="F:OEC.Data.AllocationRule.APS">
            <summary>
            Average price system
            </summary>
        </member>
        <member name="T:OEC.Data.AllocationPair">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.AllocationBlock">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.RootABOrder">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChildABOrder">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Cache">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Cache`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChildCache`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChildCacheEx`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.NamedEntity">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChildEntityEx`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IDChildEntityEx">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExchangeInterfaceType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExchangeInterfaceState">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExchangeInterface">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExchangeInterface.Key">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AccountRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AccountOperation">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AccountData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.PitRoute">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.FieldCache`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.CreatorDelegate`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.SetterDelegate`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.GetterDelegate`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.FieldList`1">
            <summary>
            Map of field name/field information
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Field`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OsmRootOrder">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExtendedData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.OsmRootOrder.AlgoParams">
            <summary>
            </summary>
        </member>
        <member name="M:OEC.Data.OsmRootOrder.AddParam(System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:OEC.Data.OsmRootOrder.Clone">
            <summary>
            </summary>
        </member>
        <member name="T:OEC.Data.OsmRootOrder.AlgoParam">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.OsmRootOrder.AlgoParam.Name">
            <summary>
            </summary>
        </member>
        <member name="F:OEC.Data.OsmRootOrder.AlgoParam.Value">
            <summary>
            </summary>
        </member>
        <member name="M:OEC.Data.OsmRootOrder.AlgoParam.#ctor(System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:OEC.Data.OsmRootOrder.AlgoParam.#ctor">
            <summary>
            </summary>
        </member>
        <member name="T:OEC.Data.OsmChildOrder">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OsmAlgoList">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.OrderRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Protocol.OrderRequest.OrderData">
            <summary>
            for bulk load
            </summary>
        </member>
        <member name="T:OEC.Protocol.ExtOrderType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ProviderLoadingState">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.OrderData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ClientRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ClientResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ContractResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AuthResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AuthChallenge">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.LogonRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.Error">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.APIData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ContractRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.OsmAlgoListRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.InfoRequestType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.InfoRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.SymbolLookupResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.InfoResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.CreateContractRequest">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.CreateContractResponse">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.ClientSyncRequest">
            <summary>
            Used for communication/syncronization between API servers
            </summary>
        </member>
        <member name="T:OEC.MathExt">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="M:OEC.MathExt.GCD(System.Int32,System.Int32)">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="M:OEC.MathExt.GCD(System.Int32[])">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.ChatMessage">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.NewsMessage">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskRequest">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskDetailRequest">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskDetailRequestType">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskProviderRequest">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskResponse">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskAdminRequest">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskLimitKey">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Protocol.RiskLimitDetail">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.CommLib.ProtoClient`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.WriteSync(`1)">
            <summary>
            Synchronous write - blocks
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.WriteAsync(`1)">
            <summary>
            Async write and forget, no notification
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.BeginWrite(`1,System.AsyncCallback)">
            <summary>
            Async write 
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.EndWrite(System.IAsyncResult)">
            <summary>
            Async Write closing
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.WriteKeepAliveSync">
            <summary>
            Async write empty msg
            </summary>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.WriteKeepAlive">
            <summary>
            Async write empty msg
            </summary>
        </member>
        <member name="M:OEC.CommLib.ProtoClient`2.Trace(System.Int32,System.String,System.Object[])">
            <summary>
            Traces network activity
            </summary>
            <param name="level"> 1 write, 2 read, 4 pair(begin/end), 8 keepalive, 16 misc</param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:OEC.CommLib.ProtoClient`2.NetFilter">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ConfigData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Session">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.SessionEnd">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.RemotingSession">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.CommandSessionRec">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.MyFunc`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.MyFunc`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.MyFunc`3">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Tools">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="M:OEC.Tools.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Concatenates two enumerators to one
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="first">first enumerator</param>
            <param name="second">second enumerator</param>
            <returns>combined enumerator</returns>
        </member>
        <member name="M:OEC.Tools.Concat``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Adds an item to enumeration, if it is not empty
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="first">enumerator</param>
            <param name="last">item</param>
            <returns>combined enumerator</returns>
        </member>
        <member name="M:OEC.Tools.Concat``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Combines arbitrary number of enumerators
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="lists">enumerators</param>
            <returns>combined enumerator</returns>
        </member>
        <member name="M:OEC.Tools.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Combines arbitrary number of enumerators
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="lists">enumerators</param>
            <returns>combined enumerator</returns>
        </member>
        <member name="M:OEC.Tools.Intersect``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Union arbitrary number of enumerators
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="lists">enumerators</param>
            <returns>combined enumerator</returns>
        </member>
        <member name="M:OEC.Tools.GroupBy``2(System.Collections.Generic.List{``1},System.Converter{``1,``0})">
            <summary>
            Groups elements in a list by key function
            </summary>
            <typeparam name="K">Key type</typeparam>
            <typeparam name="T">Element type</typeparam>
            <param name="list">List</param>
            <param name="getKey">Grouping key</param>
            <returns>List of group lists</returns>
        </member>
        <member name="M:OEC.Tools.GroupByCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Groups elements in a list by count
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="srclist">List</param>
            <param name="count">Count of items per group</param>
            <returns>List of group lists</returns>
        </member>
        <member name="M:OEC.Tools.Head``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns first N elements of a list
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="srclist">list</param>
            <param name="count">N</param>
            <returns>list</returns>
        </member>
        <member name="M:OEC.Tools.Tail``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns tail of the list
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="srclist">list</param>
            <returns>list</returns>
        </member>
        <member name="M:OEC.Tools.GetRange``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            Returns a list containing a subrange of a source list.
            </summary>
            <typeparam name="T">Element type</typeparam>
            <param name="list">List</param>
            <param name="begin">Stard index</param>
            <param name="end">End index (not inclusive)</param>
            <returns>subrange list</returns>
        </member>
        <member name="M:OEC.Tools.Empty``1">
            <summary>
            returns an empty enumeration
            </summary>
            <typeparam name="T">Element type</typeparam>
            <returns>list</returns>
        </member>
        <member name="M:OEC.Tools.Filter``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Returns an enumeration containing only filtered items
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="source">list</param>
            <param name="predicate">filter</param>
            <returns>filtered list</returns>
        </member>
        <member name="M:OEC.Tools.Extract``1(System.Collections.Generic.List{``0},System.Predicate{``0})">
            <summary>
            Returns an enumeration containing only filtered items and extract them from original source
            </summary>
            <typeparam name="T">element type</typeparam>
            <param name="source">list</param>
            <param name="predicate">filter</param>
            <returns>filtered list</returns>
        </member>
        <member name="M:OEC.Tools.MapToString``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Creates a verbose list of map elements
            </summary>
            <typeparam name="TKey">Key type</typeparam>
            <typeparam name="TValue">Value type</typeparam>
            <param name="col">Collection</param>
            <returns>string</returns>
        </member>
        <member name="T:OEC.Tools.ListSegment`1">
            <summary>
            Virtual list based on a subrange of an existing lists
            </summary>
            <remarks>
            Read-only.
            </remarks>
            <typeparam name="T">Element type</typeparam>
        </member>
        <member name="T:OEC.Enum`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Pair`2">
            <summary>
            Comparable pair of items
            <exclude/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
        </member>
        <member name="T:OEC.intPair">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValueTypeTrait`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValue`2">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValueDoubleTrait">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValueDouble">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValueNoNanTrait`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValue`1">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.LazyValueInt">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Func`2">
            <summary>
            <exclude />
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:OEC.Func`3">
            <summary>
            <exclude />
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="T:OEC.EqualityComparer`1">
            <summary>
            <exclude />
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OEC.Data.UUID">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.UserType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.Admin">
            <summary>
            Unlimited access
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.Trader">
            <summary>
            Common trader
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.Research">
            <summary>
            Research brokers - chat only, no orders/contracts
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.PitBroker">
            <summary>
            manual and FIX brokers - custom execution
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.TraderManager">
            <summary>
            Multiple Traders + allocation block functionality.
            </summary>
        </member>
        <member name="F:OEC.Data.UserType.UserAdmin">
            <summary>
            TraderManager + some admin functionality
            </summary>
        </member>
        <member name="T:OEC.Data.User">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ClientKey">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ChannelAccess">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserChannel">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserRelation">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserStatus">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserProperty">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserPitGroup">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserContractGroup">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.UserSoftware">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.InvalidUserOrPassword">
            <summary>
            Invalid user name or password
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.UserAlreadyConnected">
            <summary>
            User with same name already connected
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.InvalidClientVersion">
            <summary>
            Invalid client version - upgrade required
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.DataError">
            <summary>
            Wrong data is received
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.Expired">
            <summary>
            User account is expired
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.Disabled">
            <summary>
            User disabled
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.Locked">
            <summary>
            User temporarily locked out
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.SoftwareNotPermitted">
            <summary>
            User software is not allowed to connect
            </summary>
        </member>
        <member name="F:OEC.Data.FailReason.DisconnectedByOwner">
            <summary>
            Session is disconnected by owner
            </summary>
        </member>
        <member name="T:OEC.Data.SubscriptionRec">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Tick">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Timestamp">
            <summary>
            UTC timestamp
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Volume">
            <summary>
            Trade volume
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Type">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Deleted">
            <summary>
            Deleted by badtick filter
            </summary>
        </member>
        <member name="F:OEC.Data.Tick.Volume32">
            <summary>
            32-bit value for volume
            </summary>
        </member>
        <member name="T:OEC.Data.Ticks">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Bar">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="F:OEC.Data.Bar.Markdown">
            <summary>
            True means that price is descending, false - price is growing.
            This field used by PriceServer to calc UpTicks/DownTicks properly
            </summary>
        </member>
        <member name="T:OEC.Data.Bars">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Histogram">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.DOM">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.DOM.PriceLevelComparer">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.PriceLevel">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Quote">
            <summary>
            <exclude/> 
            Current price values
            </summary>
        </member>
        <member name="T:OEC.Data.CurrencyRate">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.PriceFields">
            <summary>
            Obsolete.
            Enumerating fields in price record
            </summary>
            <seealso cref="!:Price"/>
        </member>
        <member name="F:OEC.Data.PriceFields.LastPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.LastVol">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.LastDateTime">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.TotalVol">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.AskPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.AskVol">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.BidPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.BidVol">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.OpenPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.HighPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.LowPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.OldPrice">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Change">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.ChangePercent">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Settlement">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.OpenInterest">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Vega">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Theta">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Gamma">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.Delta">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.ImpliedVolatility">
            <summary></summary>
        </member>
        <member name="F:OEC.Data.PriceFields.All">
            <summary></summary>
        </member>
        <member name="T:OEC.Data.SubscriptionType">
            <summary>
            Subscription type
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.Price">
            <summary>
            Last price and stats
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.DOM">
            <summary>
            Depth of market
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.Tick">
            <summary>
            Ticks
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.Bar">
            <summary>
            Intraday bar, of time interval in minutes
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.Histogram">
            <summary>
            Histogram of session
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.TickBar">
            <summary>
            Bars of N ticks
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.VolumeBar">
            <summary>
            Bars of N total volume
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.RangeBar">
            <summary>
            Bars of N tick size range
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.SecondBar">
            <summary>
            Bars of N seconds
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.DayBar">
            <summary>
            Bars of N days
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.WeeklyBar">
            <summary>
            Bars of N weeks
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.MonthlyBar">
            <summary>
            Bars of N months
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.MomentumBar">
            <summary>
            Momentum Bars
            </summary>
        </member>
        <member name="F:OEC.Data.SubscriptionType.DealQuote">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.DealQuote">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.DealQuoteBody">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.DealQuoteState">
            <summary>
            <exclude />
            </summary>
        </member>
        <member name="T:OEC.Data.TrailingStopData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.EquityTrailingStopData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.TriggerType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.VolumeBasedStopData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.IcebergData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.DummyExtendedData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.FillExtendedData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="P:OEC.Data.FillExtendedData.ParentKey">
            <summary>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderExtendedData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="M:OEC.Data.OrderExtendedData.Clone">
            <summary>
            </summary>
        </member>
        <member name="P:OEC.Data.OrderExtendedData.ParentKey">
            <summary>
            </summary>
        </member>
        <member name="T:OEC.Data.OrderLink">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OCOOrderLink">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.OsmOrderLink">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.RoutedChildOrderLink">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.CompoundPositionGroup">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.CompoundLegPosition">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Position">
            <summary>
            Open position
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.AccountClearer">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Account">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.Customer">
            <summary>
            Customer account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.House">
            <summary>
            House account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.CME106R">
            <summary>
            CME106R account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.Wash">
            <summary>
            Wash account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.Giveup">
            <summary>
            Give-up account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.StandardFX">
            <summary>
            Standard FX account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.MiniFX">
            <summary>
            Mini FX account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.Equity">
            <summary>
            Equity account
            </summary>
        </member>
        <member name="F:OEC.Data.AccountType.Universal">
            <summary>
            Universal account
            </summary>
            <exclude/>
        </member>
        <member name="T:OEC.Data.Balance">
            <summary>
            Cash balance
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.EquityBalance">
            <summary>
            Equity-related balance
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Trader">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ExternalAccountCredentials">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ContractData">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.AllocationBlocksRequest">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.UserDataResponse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Protocol.ChangeType">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Currency">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Exchange">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ContractGroup">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Channel">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.PitGroup">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.ClearingHouse">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Category">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:OEC.Data.Route">
            <summary>
            <exclude/>
            </summary>
        </member>
    </members>
</doc>

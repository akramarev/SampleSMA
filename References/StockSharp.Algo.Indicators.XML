<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockSharp.Algo.Indicators</name>
    </assembly>
    <members>
        <member name="T:StockSharp.Algo.Indicators.Misc.SecurityPropertyIndicator">
            <summary>
            Индикатор, строящийся на основе значения свойства инструмента.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.SecurityPropertyIndicator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.SecurityPropertyIndicator.Property">
            <summary>
            Cвойство инструмента, которое используется как значение индикатора.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.VolumeIndicator">
            <summary>
            Объем свечки.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.VolumeIndicator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.VolumeIndicator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.VolumeIndicator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.VolumeIndicator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.DiPart">
            <summary>
            Часть индикатора <see cref="T:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPart.#ctor">
            <summary>
            Инициализировать <see cref="T:StockSharp.Algo.Indicators.Oscillator.DiPart"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPart.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPart.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPart.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPart.GetValue(StockSharp.Algo.Candles.Candle,StockSharp.Algo.Candles.Candle)">
            <summary>
            Получить значение части.
            </summary>
            <param name="current">Текущая свечка.</param>
            <param name="prev">Предыдущая свечка.</param>
            <returns>Значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DiPart.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DiPart.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.IchimokuChinkouLine">
            <summary>
            Линия Chinkou.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuChinkouLine.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.IchimokuChinkouLine"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuChinkouLine.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.IchimokuLine">
            <summary>
            Реализация одной из линий индикатора Ишимоку Кинко Хайо (Tenkan, Kijun, Senkou Span B).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuLine.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.IchimokuLine"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuLine.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuLine.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuLine.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine">
            <summary>
            Линия Senkou Span A.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine.#ctor(StockSharp.Algo.Indicators.Oscillator.IchimokuLine,StockSharp.Algo.Indicators.Oscillator.IchimokuLine)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine"/>.
            </summary>
            <param name="tenkan">Линия Tenkan.</param>
            <param name="kijun">Линия Kijun.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
            
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine.Tenkan">
            <summary>
            Линия Tenkan.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouALine.Kijun">
            <summary>
            Линия Kijun.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine">
            <summary>
            Линия Senkou Span B.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine.#ctor(StockSharp.Algo.Indicators.Oscillator.IchimokuLine)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.IchimokuLine"/>.
            </summary>
            <param name="kijun">Линия Kijun.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.IchimokuSenkouBLine.Kijun">
            <summary>
            Линия Kijun.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage">
            <summary>
            Средневзвешанная часть индикатора <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal">
            <summary>
            Сигнальная часть индикатора <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.BollingerBand">
            <summary>
            Полоса Боллинджера.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBand.#ctor(StockSharp.Algo.Indicators.LengthIndicator{System.Decimal},StockSharp.Algo.Indicators.Trend.StandardDeviation)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.BollingerBand"/>.
            </summary>
            <param name="ma">Скользящая средняя.</param>
            <param name="dev">Стандартное отклонение.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBand.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBand.Width">
            <summary>
            Ширина канала.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage">
            <summary>
            Double Exponential Moving Average.
            </summary>
            <remarks>
            ((2 * EMA) – EMA of EMA)
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.DoubleExponentialMovingAverage.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.HullMovingAverage">
            <summary>
            Скользящая средняя Халла (Hull Moving Average).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.HullMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.HullMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.HullMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.HullMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.HullMovingAverage.Length">
            <summary>
            Длина периода. По-умолчанию длина равна 10.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.HullMovingAverage.SqrtPeriod">
            <summary>
            Период результирующей средней. Если SqrtPerio равен 0, период результирующей средней равен квадратному корню периода HMA. Значение SqrtPeriod по умолчанию - 0. 
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.HullMovingAverage.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.JurikMovingAverage">
            <summary>
            Юриковская (Jurik's) скользящая средняя.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.JurikMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.Initialize">
            <summary>
            Начальная инициализация переменных
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.Phase">
            <summary>
            Фаза
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.JurikMovingAverage.LastDirection">
            <summary>
            Текущее направление тренда
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage">
            <summary>
            Адаптивная скользящая средняя Кауфманна.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.FastSCPeriod">
            <summary>
            Период "быстрой" EMA. Значение по умолчанию 2.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.SlowSCPeriod">
            <summary>
            Период "медленной" EMA. Значение по умолчанию 30.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.KaufmannAdaptiveMovingAverage.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram">
            <summary>
            Схождение/расхождение скользящих средних. Гистограмма.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal">
            <summary>
            Схождение/расхождение скользящих средних с сигнальной линией.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal.#ctor(StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence,StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal"/>.
            </summary>
            <param name="macd">Схождение/расхождение скользящих средних.</param>
            <param name="signalMa">Сигнальная скользящая средняя.</param>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal.Macd">
            <summary>
            Схождение/расхождение скользящих средних.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceSignal.SignalMa">
            <summary>
            Сигнальная скользящая средняя.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram.#ctor(StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence,StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram"/>.
            </summary>
            <param name="macd">Схождение/расхождение скользящих средних.</param>
            <param name="signalMa">Сигнальная скользящая средняя.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergenceHistogram.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse">
            <summary>
            NickRypockTrailingReverse (Nick Rypock Trailing _reverse).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.Мultiple">
            <summary>
            Множитель.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.RoundDigits">
            <summary>
            Округление до знака после запятой.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.NickRypockTrailingReverse.Trend">
            <summary>
            Направление тренда.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage">
            <summary>
            Triple Exponential Moving Average.
            </summary>
            <remarks>
            http://tradingsim.com/blog/triple-exponential-moving-average/
            (3 * EMA) – (3 * EMA of EMA) + EMA of EMA of EMA)
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.TripleExponentialMovingAverage.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.ZigZag">
            <summary>
            ЗигЗаг.
            </summary>
            <remarks>
            ZigZag отслеживает и соединяет между собой крайние точки графика отстоящие
            друг от друга не менее чем на заданный процент по шкале цены.
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ZigZag.#ctor">
            <summary>
             Создать <see cref="T:StockSharp.Algo.Indicators.Trend.ZigZag"/>
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ZigZag.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.BackStep">
            <summary>
             Минимальное число баров между локальными максимумами, минимумами.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.Depth">
            <summary>
             Минимум баров, на котором Zigzag не будет строить второй максимум (или минимум),
             если тот меньше (или больше) на deviation предыдущего соответственно.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.Deviation">
            <summary>
             Минимальное количество пунктов между максимумами (минимумами) двух соседних баров для того
             чтобы индикатор Zigzag сформировал локальную вершину (локальный минимум).
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.HighValueFunc">
            <summary>
             Конвертер, который возвращает из свечки цену для поиска максимума.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.LowValueFunc">
            <summary>
             Конвертер, который возвращает из свечки цену для поиска минимумв.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.CurrentValueFunc">
            <summary>
             Конвертер, который возвращает из свечки цену для текущего значения.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.CurrentValue">
            <summary>
             Текущее значение индикатора
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZag.LastValueShift">
            <summary>
             Смещение для последнего значения индикатора
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.ZigZagEquis">
            <summary>
             ЗигЗаг (Metastock).
            </summary>
             <remarks>
             Индикатор Зиг-Заг (Zig Zag) фильтрует колебания цен или значений индикаторов, которые не выходят за определенную величину
             выраженную в % или абсолютных числах. Это делается для предварительного анализа графика на котором акцентированы только 
             достаточно большие изменения цен (значений индикатора).
             </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ZigZagEquis.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.ZigZagEquis"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ZigZagEquis.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ZigZagEquis.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZagEquis.Deviation">
            <summary>
             Процент изменения.
            </summary>
             <remarks>Указывается в диапазоне от 0 до 1</remarks>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZagEquis.ByPrice">
            <summary>
             Конвертер, который возвращает из свечки цену для расчетов.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ZigZagEquis.CurrentValue">
            <summary>
             Текущее значение индикатора.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.Alligator">
            <summary>
            Аллигатор.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/bills/alligator
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Alligator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Alligator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Alligator.#ctor(StockSharp.Algo.Indicators.Williams.AlligatorLine,StockSharp.Algo.Indicators.Williams.AlligatorLine,StockSharp.Algo.Indicators.Williams.AlligatorLine)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Alligator"/>.
            </summary>
            <param name="jaw">Челюсть.</param>
            <param name="teeth">Зубы.</param>
            <param name="lips">Губы.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Alligator.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Alligator.Jaw">
            <summary>
            Челюсть.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Alligator.Teeth">
            <summary>
            Зубы.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Alligator.Lips">
            <summary>
            Губы.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Alligator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.AlligatorLine">
            <summary>
            Реализация одной из линий индикатора Alligator (Jaw, Teeth, Lips).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AlligatorLine.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.AlligatorLine"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AlligatorLine.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AlligatorLine.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AlligatorLine.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AlligatorLine.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AlligatorLine.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AlligatorLine.Shift">
            <summary>
            Сдвиг в будущее.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AlligatorLine.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.FractalPart">
            <summary>
            Часть <see cref="T:StockSharp.Algo.Indicators.Williams.Fractals"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.FractalPart.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.FractalPart.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.GatorHistogram">
            <summary>
            Гистограмма осцилятора <see cref="T:StockSharp.Algo.Indicators.Williams.GatorOscillator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorHistogram.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorHistogram.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.GatorOscillator">
            <summary>
            Gator осцилятор.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/bills/gator
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorOscillator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.GatorOscillator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorOscillator.#ctor(StockSharp.Algo.Indicators.Williams.Alligator,StockSharp.Algo.Indicators.Williams.GatorHistogram,StockSharp.Algo.Indicators.Williams.GatorHistogram)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.GatorOscillator"/>.
            </summary>
            <param name="alligator">Аллигатор.</param>
            <param name="histogram1">Верхняя гистограмма.</param>
            <param name="histogram2">Нижняя гистограмма.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorOscillator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.GatorOscillator.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.GatorOscillator.Histogram1">
            <summary>
            Верхняя гистограмма.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.GatorOscillator.Histogram2">
            <summary>
            Нижняя гистограмма.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.GatorOscillator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.MarketFacilitationIndex">
            <summary>
            Индекс Облегчения Рынка.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/bills/market_facilitation_index
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.MarketFacilitationIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.MarketFacilitationIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.MarketFacilitationIndex.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.MarketFacilitationIndex.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex">
            <summary>
            Индекс среднего направления движения Welles Wilder.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex.#ctor(StockSharp.Algo.Indicators.Oscillator.DirectionalIndex,StockSharp.Algo.Indicators.LengthIndicator{System.Decimal})">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex"/>.
            </summary>
            <param name="dx">Индекса направленного движения Welles Wilder.</param>
            <param name="movingAverage">Скользящая средняя.</param>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex.Dx">
            <summary>
            Индекса направленного движения Welles Wilder.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex.MovingAverage">
            <summary>
            Скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageDirectionalIndex.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange">
            <summary>
            Средний истинный диапазон <see cref="P:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.TrueRange"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.#ctor(StockSharp.Algo.Indicators.LengthIndicator{System.Decimal},StockSharp.Algo.Indicators.Oscillator.TrueRange)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange"/>.
            </summary>
            <param name="movingAverage">Скользящая средняя.</param>
            <param name="trueRange">Истинный диапазон.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.MovingAverage">
            <summary>
            Скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.TrueRange">
            <summary>
            Истинный диапазон.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.AverageTrueRange.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.BollingerBands">
            <summary>
            Полосы Боллинджера.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBands.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.BollingerBands"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBands.#ctor(StockSharp.Algo.Indicators.LengthIndicator{System.Decimal})">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.BollingerBands"/>.
            </summary>
            <param name="ma">Средняя</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBands.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.BollingerBands.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBands.UpBand">
            <summary>
            Верхняя полоса+.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBands.LowBand">
            <summary>
            Нижняя полоса-.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBands.Length">
            <summary>
            Длина периода. По-умолчанию длина равна 1.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBands.Width">
            <summary>
            Ширина канала Полос Боллинджера. Значение по умолчанию равно 2.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.BollingerBands.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex">
            <summary>
            Индекс товарного канала.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.CommodityChannelIndex.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator">
            <summary>
            Осциллятор ценовых моментов Чанде.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.ChandeMomentumOscillator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator">
            <summary>
            Бестрендовый ценовой осциллятор.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DetrendedPriceOscillator.IsFormed">
            <summary>
            Индикатор сформирован.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence">
            <summary>
            Схождение/расхождение скользящих средних.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.#ctor(StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage,StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence"/>.
            </summary>
            <param name="longMa">Длинная скользящая средняя.</param>
            <param name="shortMa">Короткая скользящая средняя.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.LongMa">
            <summary>
            Длинная скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.ShortMa">
            <summary>
            Короткая скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.MovingAverageConvergenceDivergence.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.MeanDeviation">
            <summary>
            Среднее отклонение.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.MeanDeviation.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.MeanDeviation"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.MeanDeviation.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.MeanDeviation.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.MeanDeviation.Sma">
            <summary>
            Скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.MeanDeviation.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.ParabolicSar">
            <summary>
            Реализация индикатора тренда - Parabolic SAR.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/trends/parabolic_sar
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ParabolicSar.#ctor">
            <summary>
            Создать Parabolic SAR
            </summary>
        </member>
        <member name="F:StockSharp.Algo.Indicators.Trend.ParabolicSar._prevValue">
            <summary>
            значение индикатора Parabolic SAR на предыдущем баре;
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ParabolicSar.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ParabolicSar.Acceleration">
            <summary>
            Фактор ускорения
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ParabolicSar.AccelerationStep">
            <summary>
            Шаг фактора ускорения
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.ParabolicSar.AccelerationMax">
            <summary>
            Максимальный фактор ускорения
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.QStick">
            <summary>
            QStick.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/QStick.ashx
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.QStick.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.QStick"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.QStick.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.QStick.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.QStick.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex">
            <summary>
            Индекс Относительной Энергии.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex.#ctor(StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexAverage,StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndexSignal)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex"/>.
            </summary>
            <param name="average">Средневзвешанная часть индикатора.</param>
            <param name="signal">Сигнальная часть индикатора.</param>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex.Average">
            <summary>
            Средневзвешанная часть индикатора.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeVigorIndex.Signal">
            <summary>
            Сигнальная часть индикатора.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.Trix">
            <summary>
            Тройная экспоненциальная скользящая средняя.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/TRIX.ashx
            http://www.incrediblecharts.com/indicators/trix_indicator.php
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Trix.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Trix.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Trix.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.Trix.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.Trix.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.TroughBar">
            <summary>
            ВпадинаБар.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/TroughBar.ashx
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.TroughBar.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.TroughBar"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.TroughBar.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.TroughBar.ReversalAmount">
            <summary>
            Порог изменения индикатора.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.PeakBar">
            <summary>
            ПикБар.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/PeakBar.ashx
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.PeakBar.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.PeakBar"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.PeakBar.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.PeakBar.ReversalAmount">
            <summary>
            Порог изменения индикатора.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.Peak">
            <summary>
            Пик.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.Peak.#ctor">
            <summary>
            Создать индикатор <see cref="T:StockSharp.Algo.Indicators.Trend.Peak"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.Peak.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.Trough">
            <summary>
            Впадина.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.Trough.#ctor">
            <summary>
            Создать индикатор <see cref="T:StockSharp.Algo.Indicators.Trend.Trough"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.Trough.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.LinearReg">
            <summary>
            Линейная регрессия - Value возвращает прогноз последней точки.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearReg.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.LinearReg"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearReg.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearReg.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.LinearRegression">
            <summary>
            Полный класс линейной регрессии, считает одновременно LinearReg, LinearRegSlope, RSquared и StandardError.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearRegression.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.LinearRegression"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearRegression.#ctor(StockSharp.Algo.Indicators.Misc.LinearReg,StockSharp.Algo.Indicators.Misc.RSquared,StockSharp.Algo.Indicators.Misc.LinearRegSlope,StockSharp.Algo.Indicators.Misc.StandardError)">
            <summary>
             Создать <see cref="T:StockSharp.Algo.Indicators.Misc.LinearRegression"/>.
            </summary>
            <param name="linearReg">Линейная регрессия.</param>
            <param name="rSquared">R-квадрат регрессии.</param>
            <param name="regSlope">Коэффициент при независимой переменной, угол наклона прямой.</param>
            <param name="standardError">Стандартная ошибка.</param>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.LinearRegression.Length">
            <summary>
             Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.LinearRegression.LinearReg">
            <summary>
            Линейная регрессия.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.LinearRegression.RSquared">
            <summary>
            R-квадрат регрессии.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.LinearRegression.StandardError">
            <summary>
            Стандартная ошибка.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.LinearRegression.LinearRegSlope">
            <summary>
            Коэффициент при независимой переменной, угол наклона прямой.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.LinearRegSlope">
            <summary>
            Наклон линейной регрессии.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearRegSlope.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.LinearRegSlope"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.LinearRegSlope.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.RSquared">
            <summary>
            R-квадрат в линейной регрессии.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.RSquared.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.RSquared"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.RSquared.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.RSquared.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.StandardError">
            <summary>
            Стандартная ошибка в линейной регрессии.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.StandardError.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.StandardError"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.StandardError.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.StandardError.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.UltimateOscillator">
            <summary>
            Последний осцилятор.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/UltimateOsc.ashx
            http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:ultimate_oscillator
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.UltimateOscillator.#ctor">
            <summary>
            Создать индикатор<see cref="T:StockSharp.Algo.Indicators.Oscillator.UltimateOscillator"/>.
            </summary>		
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.UltimateOscillator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.UltimateOscillator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.ChaikinVolatility">
            <summary>
            Волатильность Чайкина.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/Volatility.ashx
            http://www.incrediblecharts.com/indicators/chaikin_volatility.php
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.ChaikinVolatility.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.ChaikinVolatility"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.ChaikinVolatility.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.ChaikinVolatility.Ema">
            <summary>
            Скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.ChaikinVolatility.Roc">
            <summary>
            Скорость изменения.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.ChaikinVolatility.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.Vidya">
            <summary>
            Динамическая средняя переменного индекса (Variable Index Dynamic Average).
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/Vidya.ashx
            http://www.mql5.com/en/code/75 
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Vidya.#ctor">
            <summary>
            Создать индикатор<see cref="T:StockSharp.Algo.Indicators.Misc.Vidya"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Vidya.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.Vidya.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.WilliamsR">
            <summary>
            Процентный диапазон Уильямса.
            </summary>
            <remarks>
             %R = (Highest High - Close)/(Highest High - Lowest Low) * -100
            http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:williams_r
            http://www2.wealth-lab.com/WL5Wiki/WilliamsR.ashx
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.WilliamsR.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.WilliamsR"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.WilliamsR.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.WilliamsR.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.WilliamsR.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.WilliamsR.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.WilliamsR.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter">
            <summary>
            Вертиально-горизонтальный фильтр.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/VHF.ashx
            http://www.stator-afm.com/vertical-horizontal-filter.html
            http://www.incrediblecharts.com/indicators/vertical_horizontal_filter.php
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.VerticalHorizontalFilter.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.DiMinus">
            <summary>
            DIMinus is a component of the Directional Movement System developed by Welles Wilder.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiMinus.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.DiMinus"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiMinus.GetValue(StockSharp.Algo.Candles.Candle,StockSharp.Algo.Candles.Candle)">
            <summary>
            Получить значение части.
            </summary>
            <param name="current">Текущая свечка.</param>
            <param name="prev">Предыдущая свечка.</param>
            <returns>Значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.DiPlus">
            <summary>
            DIPlus is a component of the Directional Movement System developed by Welles Wilder.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPlus.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.DiPlus"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DiPlus.GetValue(StockSharp.Algo.Candles.Candle,StockSharp.Algo.Candles.Candle)">
            <summary>
            Получить значение части.
            </summary>
            <param name="current">Текущая свечка.</param>
            <param name="prev">Предыдущая свечка.</param>
            <returns>Значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex">
            <summary>
            Индекса направленного движения Welles Wilder.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex.Plus">
            <summary>
            DI+.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.DirectionalIndex.Minus">
            <summary>
            DI-.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage">
            <summary>
            Экспоненциальная скользящая средняя.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.ExponentialMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.Fractals">
            <summary>
            Фракталы.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/bills/fractal
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Fractals.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Fractals"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Fractals.#ctor(System.Int32,StockSharp.Algo.Indicators.Williams.FractalPart,StockSharp.Algo.Indicators.Williams.FractalPart)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Fractals"/>.
            </summary>
            <param name="length">Длина периода.</param>
            <param name="up">Фрактал вверх.</param>
            <param name="down">Фрактал вниз.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Fractals.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Fractals.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Fractals.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Fractals.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Fractals.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Fractals.Up">
            <summary>
            Фрактал вверх.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Fractals.Down">
            <summary>
            Фрактал вниз.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.Highest">
            <summary>
            Максимальное значение за период.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Highest.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.Highest"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Highest.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.Ichimoku">
            <summary>
            Ишимоку.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/oscillators/ichimoku
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.Ichimoku.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.Ichimoku"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.Ichimoku.#ctor(StockSharp.Algo.Indicators.Oscillator.IchimokuLine,StockSharp.Algo.Indicators.Oscillator.IchimokuLine)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.Ichimoku"/>.
            </summary>
            <param name="tenkan">Линия Tenkan.</param>
            <param name="kijun">Линия Kijun.</param>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Ichimoku.Tenkan">
            <summary>
            Линия Tenkan.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Ichimoku.Kijun">
            <summary>
            Линия Kijun.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Ichimoku.SenkouA">
            <summary>
            Линия Senkou Span A.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Ichimoku.SenkouB">
            <summary>
            Линия Senkou Span B.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Ichimoku.Chinkou">
            <summary>
            Линия Chinkou.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.Lowest">
            <summary>
            Минимальное значение за период.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Lowest.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.Lowest"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Lowest.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.Momentum">
            <summary>
            Моментум.
            </summary>
            <remarks>
            Momentum Simple = C - C-n
            Где C- цена закрытия текущего периода.
            Где С-n - цена закрытия N периодов назад.
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.Momentum.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.Momentum"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.Momentum.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.Momentum.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
            <remarks>
            Необходимо Length + 1 значение для формирования индикатора.
            </remarks>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex">
            <summary>
            Range Action Verification Index.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex.ShortSma">
            <summary>
            Короткая скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex.LongSma">
            <summary>
            Длинная скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.RangeActionVerificationIndex.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex">
            <summary>
            Индекс относительной силы.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.RelativeStrengthIndex.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.RateOfChange">
            <summary>
            Скорость изменения.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RateOfChange.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.RateOfChange"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.RateOfChange.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.SimpleMovingAverage">
            <summary>
            Простая скользящая средняя.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.SimpleMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.SimpleMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.SimpleMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.SmoothedMovingAverage">
            <summary>
            Сглаженное скользящее среднее.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.SmoothedMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.SmoothedMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.SmoothedMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.StandardDeviation">
            <summary>
            Стандартное отклонение.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.StandardDeviation.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.StandardDeviation"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.StandardDeviation.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.StandardDeviation.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.StandardDeviation.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.StochasticK">
            <summary>
            Стохастик %K.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.StochasticK.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.StochasticK"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.StochasticK.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.StochasticK.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Oscillator.StochasticK.IsFormed">
            <summary>
            Индикатор сформирован.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.Sum">
            <summary>
            Сумма N последних значений.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Sum.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.Sum"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.Sum.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Oscillator.TrueRange">
            <summary>
            Истинный диапазон.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.TrueRange.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Oscillator.TrueRange"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.TrueRange.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.TrueRange.GetPriceMovements(StockSharp.Algo.Candles.Candle,StockSharp.Algo.Candles.Candle)">
            <summary>
            Получить компоненты цен для выбора максимального значения.
            </summary>
            <param name="currentCandle">Текущая свечка.</param>
            <param name="prevCandle">Предыдущая свечка.</param>
            <returns>Компоненты цен.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Oscillator.TrueRange.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage">
            <summary>
            Взвешенная по объему скользящая средняя.
            </summary>
            <remarks>
            http://www2.wealth-lab.com/WL5Wiki/VMA.ashx
            http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:vwap_intraday      
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage.#ctor">
            <summary>
            Создать индикатор <see cref="T:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage.Length">
            <summary>
            Длина периода.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Trend.VolumeWeightedMovingAverage.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.WilderMovingAverage">
            <summary>
            Скользящая средняя Welles Wilder.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.WilderMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.WilderMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.WilderMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Trend.WeightedMovingAverage">
            <summary>
            Взвешанная скользящая средняя.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.WeightedMovingAverage.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Trend.WeightedMovingAverage"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.WeightedMovingAverage.Reset">
            <summary>
            Сбросить состояние индикатора на первоначальное. Метод вызывается каждый раз, когда меняются первоначальные настройки (например, длина периода).
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Trend.WeightedMovingAverage.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.Acceleration">
            <summary>
            Индикатор Замедления / Ускорения.
            </summary>
            <remarks>
            http://ta.mql4.com/indicators/bills/acceleration_deceleration
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Acceleration.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Acceleration"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Acceleration.#ctor(StockSharp.Algo.Indicators.Williams.AwesomeOscillator,StockSharp.Algo.Indicators.Trend.SimpleMovingAverage)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.Acceleration"/>.
            </summary>
            <param name="ao">Чудесный осцилятор.</param>
            <param name="sma">Cкользящая средняя.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Acceleration.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.Acceleration.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Acceleration.Sma">
            <summary>
            Cкользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Acceleration.Ao">
            <summary>
            Чудесный осцилятор.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.Acceleration.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Williams.AwesomeOscillator">
            <summary>
            Чудесный осцилятор.
            </summary>
             <remarks>
            http://ta.mql4.com/indicators/bills/awesome
            </remarks>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.AwesomeOscillator"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.#ctor(StockSharp.Algo.Indicators.Trend.SimpleMovingAverage,StockSharp.Algo.Indicators.Trend.SimpleMovingAverage)">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Williams.AwesomeOscillator"/>.
            </summary>
            <param name="longSma">Длинная скользящая средняя.</param>
            <param name="shortSma">Короткая скользящая средняя.</param>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.CanProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Возможно ли обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>True, если возможно, иначе, false.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.Clone">
            <summary>
            Создать копию данного объекта.
            </summary>
            <returns>Копия данного объекта.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.LongMa">
            <summary>
            Длинная скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.ShortMa">
            <summary>
            Короткая скользящая средняя.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.MedianPrice">
            <summary>
            Медианная цена.
            </summary>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Williams.AwesomeOscillator.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
        <member name="T:StockSharp.Algo.Indicators.Misc.MedianPrice">
            <summary>
            Медианная цена.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.MedianPrice.#ctor">
            <summary>
            Создать <see cref="T:StockSharp.Algo.Indicators.Misc.MedianPrice"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Algo.Indicators.Misc.MedianPrice.OnProcess(StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Обработать входное значение.
            </summary>
            <param name="input">Входное значение.</param>
            <returns>Результирующее значение.</returns>
        </member>
        <member name="P:StockSharp.Algo.Indicators.Misc.MedianPrice.IsFormed">
            <summary>
            Сформирован ли индикатор.
            </summary>
        </member>
    </members>
</doc>
